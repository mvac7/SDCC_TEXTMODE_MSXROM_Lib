SDCC MSX ROM TEXTMODE Functions Library (object type)
Version: 1.2 (3/4/2018)
Author: mvac7/303bcn
Architecture: MSX
Format: C Object (SDCC .rel)
Programming language: C
WEB: 
mail: mvac7303b@gmail.com
Doc version: 1.0

History of versions:
    v1.1 (27/2/2017)



Sorry. This text is pending correction.

    
--------------------------------------------------------------------------------
Index:

1 Introduction

2 Acknowledgments

3 Requirements

4 Functions
   4.1  SCREEN0
   4.2  SCREEN1
   4.3  WIDTH
   4.4  COLOR
   4.5  CLS
   4.6  LOCATE
   4.7  PRINT
   4.8  PrintNumber
   4.9  PrintFNumber

5 Support functions
   5.1  num2Dec16
   5.2  bchput
   
   
      
--------------------------------------------------------------------------------
1 Introduction:

It's a opensource library of functions for create aplications in text mode.

It uses the functions of the MSX BIOS, so it is designed to create applications 
in ROM format.
  
Works in T1 (screen 0, 40 columns), T2 (screen 0, 80 columns), and G1 (screen 1,
32 columns) modes.

For develop MSX applications using Small Device C Compiler (SDCC) compilator.


                                                          
--------------------------------------------------------------------------------
2 Acknowledgments

  Thanks for Info & help, to:

  Avelino Herrera > http://msx.atlantes.org/index_es.html
  Nerlaska > http://albertodehoyonebot.blogspot.com.es
  Fubu > http://www.gamerachan.org/fubu/
  Marq/Lieves!Tuore > http://www.kameli.net/lt/
  Sapphire/Z80ST > http://z80st.auic.es/
  Pentacour > http://pentacour.com/
  JamQue/TPM > http://www.thepetsmode.com/
  Andrear > http://andrear.altervista.org/home/msxsoftware.php
  Konamiman > https://www.konamiman.com
  MSX Assembly Page > http://map.grauw.nl/resources/msxbios.php
  Portar MSX Tech Doc > http://nocash.emubase.de/portar.htm
  MSX Resource Center > http://www.msx.org/
  Karoshi MSX Community > http://karoshi.auic.es/
  BlueMSX >> http://www.bluemsx.com/
  OpenMSX >> http://openmsx.sourceforge.net/
  Meisei  >> ?
 

 
--------------------------------------------------------------------------------
3 Requirements:

 * Small Device C Compiler (SDCC) v3.6.0 or higher
   http://sdcc.sourceforge.net/
   


--------------------------------------------------------------------------------
4 Functions:


================================================================================
4.1 SCREEN0

 Function: 
           void SCREEN0()
 Description: 
           Switch to T1 or T2 mode (SCREEN 0), 40 or 80 columns x 24 lines.
 Input:    -
 Output:   -
 Examples:
 
           SCREEN0();          



================================================================================
4.2 SCREEN1

 Function: 
           void SCREEN1()
 Description: 
           Switch to G1 mode (SCREEN 1), 32 columns x 24 lines.
 Input:    -
 Output:   -
 Examples:
 
           SCREEN1();



================================================================================
4.3 WIDTH

 Function: 
           void WIDTH(char columns)
 Description: 
           Specifies the number of characters per line in text mode.
 Input:     1 to 40 in T1 40 columns mode
           41 to 80 in T2 80 columns mode (only MSX with V9938 and BIOS support 
                                           this mode)
            1 to 32 in G1 mode
 Output:   -
 Examples:
 
           WIDTH(40);



================================================================================
4.4 COLOR

 Function: 
           void COLOR(char ink, char background, char border)
 Description: 
           Specifies the colors of foreground, background, and border area.
 Input:    (char) ink (0 to 15)
           (char) background (0 to 15)
           (char) border (0 to 15)
 Output:   -
 Examples:
            
           COLOR(15,4,4);


================================================================================
4.5 CLS

 Function: 
           void CLS()
 Description: 
           Clear the contents of the screen.
 Input:    -        
 Output:   -
 Examples:
 
           CLS();



================================================================================
4.6 LOCATE

 Function: 
           void LOCATE(char x, char y)
 Description: 
           Moves the cursor to the specified location.
 Input:    (char) Position X of the cursor. (0 to 31 or 79)
           (char) Position Y of the cursor. (0 to 23)         
 Output:   -
 Examples:
 
           LOCATE(10,12);



================================================================================
4.7 PRINT

 Function: 
           void PRINT(char* text)
 Description: 
           Displays a text string on the screen.
           
           Supports escape secuences:
             \n - Newline > Line Feed and Carriage Return (CRLF) 
             \r - Carriage Return
             \t - Horizontal Tab
             \a - Beep
             \f - Formfeed. Clear screen and place the cursor at the top.
             \\ - Backslash
             \' - Single quotation mark
             \" - Double quotation mark
             \? - Question mark
             
             \v - Place the cursor at the top of the screen
                  Warning!: Does not correspond to Vertical Tab, of standardized 
                            use in C.
                        
 Input:    (char*) String    
 Output:   -
 Examples:
           PRINT("Hello World");
            
           char aString[]="ARE YOU SURE?\nYes, No\a";
           PRINT(aString);



================================================================================
4.8 PrintNumber

 Function: 
           void PrintNumber(unsigned int value)
 Description: 
           Prints an unsigned integer on the screen.  
 Input:    (unsigned int) numeric value          
 Output:   -
 Examples:
 
           PrintNumber(17334);



================================================================================
4.9 PrintFNumber

 Function: 
           void PrintFNumber(unsigned int value, char emptyChar, char length)
 Description: 
           Prints an unsigned integer on the screen with formatting parameters.
 Input:    (unsigned int) numeric value
           (char) empty Char: (32=' ', 48='0', etc.)
           (char) length: 1 to 5          
 Output:   -
 Examples:
 
           PrintFNumber(2400,' ',5);
           
            2400
           
            
           char charValue=71;
           PrintFNumber(charValue,'0',3);
           
           071

           
           PrintFNumber(502,48,4);
           
           0502
           
           
           
           
--------------------------------------------------------------------------------
5 Support functions

   The next functions are required for the operation of the main functions.
   
   

================================================================================
5.1 num2Dec16

 Function: 
           void num2Dec16(unsigned int aNumber, char *address, char emptyChar)
 Description: 
           16-bit Integer to ASCII (decimal)
           Based on the code by baze.
 Input:    (unsigned int) a number
           (char*) Address where the output string is provided.
           (char) empty Char: 32=space, 48=zero
 Output:   -



================================================================================
5.2 bchput

  Function: 
           void bchput(char value)
  Description: 
           Displays one character (MSX BIOS CHPUT).
  Input:   (char) text char
  Output:  -
  Examples:
  
           bchput(13); //CR (Carriage Return)
           
           
--------------------------------------------------------------------------------