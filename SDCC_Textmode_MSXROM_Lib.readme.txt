SDCC MSX ROM TEXTMODE Functions Library (object type)
Version: 1.3 
Date: 05/09/2019
Author: mvac7/303bcn
Architecture: MSX
Format: C Object (SDCC .rel)
Programming language: C + Assembler
WEB: 
mail: mvac7303b@gmail.com


History of versions:
- v1.3 (05/09/2019)< Integer printing functions improved (PrintNumber & PrintFNumber).
                     num2Dec16 becomes PrintFNumber.
- v1.2 (03/04/2018)
- v1.1 (27/02/2017)
    
--------------------------------------------------------------------------------
Index:

1 Introduction

2 Acknowledgments

3 Requirements

4 Functions
   4.1  SCREEN0
   4.2  SCREEN1
   4.3  WIDTH
   4.4  COLOR
   4.5  CLS
   4.6  LOCATE
   4.7  PRINT
   4.8  PrintNumber
   4.9  PrintFNumber

5 Support functions
   5.1  bchput
   
   
      
--------------------------------------------------------------------------------
1 Introduction:

This project is an Open Source library of functions for creating aplications in 
text mode.

Works in T1 (screen 0, 40 columns), T2 (screen 0, 80 columns), and G1 (screen 1,
32 columns) modes.

It uses the functions from the MSX BIOS, so it is designed to create 
applications in ROM format.

Use them for developing MSX applications using Small Device C Compiler (SDCC).

Includes an application for test and learning purposes.


                                                          
--------------------------------------------------------------------------------
2 Acknowledgments

  Thanks for Info & help, to:

  Avelino Herrera > http://msx.atlantes.org/index_es.html
  Nerlaska > http://albertodehoyonebot.blogspot.com.es
  Fubu > http://www.gamerachan.org/fubu/
  Marq/Lieves!Tuore > http://www.kameli.net/lt/
  Sapphire/Z80ST > http://z80st.auic.es/
  Pentacour > http://pentacour.com/
  JamQue/TPM > http://www.thepetsmode.com/
  Andrear > http://andrear.altervista.org/home/msxsoftware.php
  Konamiman > https://www.konamiman.com
  MSX Assembly Page > http://map.grauw.nl/resources/msxbios.php
  Portar MSX Tech Doc > http://nocash.emubase.de/portar.htm
  MSX Resource Center > http://www.msx.org/
  Karoshi MSX Community > http://karoshi.auic.es/
  BlueMSX >> http://www.bluemsx.com/
  OpenMSX >> http://openmsx.sourceforge.net/
  Meisei  >> ?
 

 
--------------------------------------------------------------------------------
3 Requirements:

 * Small Device C Compiler (SDCC) v3.6.0 or higher
   http://sdcc.sourceforge.net/
   
 * Hex2bin v2.2 
   http://hex2bin.sourceforge.net/



--------------------------------------------------------------------------------
4 Functions:


================================================================================
4.1 SCREEN0

 Function: 
           void SCREEN0()
 Description: 
           Switch to T1 or T2 mode (SCREEN 0), 40 or 80 columns x 24 lines.
           Notice: To set the T2 mode, you must first set 80 columns with the 
           WIDTH instruction.
 Input:    -
 Output:   -
 Examples:
 
           SCREEN0();          



================================================================================
4.2 SCREEN1

 Function: 
           void SCREEN1()
 Description: 
           Switch to G1 mode (SCREEN 1), 32 columns x 24 lines.
 Input:    -
 Output:   -
 Examples:
 
           SCREEN1();



================================================================================
4.3 WIDTH

 Function: 
           void WIDTH(char columns)
 Description: 
           Specifies the number of characters per line in text mode.
 Input:     1 to 40 in T1 40 columns mode
           41 to 80 in T2 80 columns mode (only MSX with V9938 and a BIOS that 
                                           supports this mode)
            1 to 32 in G1 mode
 Output:   -
 Examples:
 
           WIDTH(40);



================================================================================
4.4 COLOR

 Function: 
           void COLOR(char ink, char background, char border)
 Description: 
           Specifies the colors of the foreground, background, and border area.
 Input:    (char) ink (0 to 15)
           (char) background (0 to 15)
           (char) border (0 to 15)
 Output:   -
 Examples:
            
           COLOR(15,4,4);


================================================================================
4.5 CLS

 Function: 
           void CLS()
 Description: 
           Clear the contents of the screen.
           Fill screen map with 0x20 character.
 Input:    -        
 Output:   -
 Examples:
 
           CLS();



================================================================================
4.6 LOCATE

 Function: 
           void LOCATE(char x, char y)
 Description: 
           Moves the cursor to the specified location.
 Input:    (char) Position X of the cursor. (0 to 31 or 79)
           (char) Position Y of the cursor. (0 to 23)         
 Output:   -
 Examples:
 
           LOCATE(10,12);



================================================================================
4.7 PRINT

 Function: 
           void PRINT(char* text)
 Description: 
           Displays a text string on the screen.
                                   
 Input:    (char*) String    
 Output:   -
 Notes:
            Supports escape sequences:
             \a (0x07) - Beep
             \b (0x08) - Backspace. Cursor left, wraps around to previous line, 
                         stop at top left of screen.
             \t (0x09) - Horizontal Tab. Tab, overwrites with spaces up to next 
                         8th column, wraps around to start of next line, scrolls
                         at bottom right of screen.
             \n (0x0A) - Newline > Line Feed and Carriage Return (CRLF) 
                         Note: CR added in this Lib.
             \v (0x0B) - Cursor home. Place the cursor at the top of the screen.
             \f (0x0C) - Formfeed. Clear screen and place the cursor at the top. 
             \r (0x0D) - CR (Carriage Return)
            
             \" (0x22) - Double quotation mark
             \' (0x27) - Single quotation mark
             \? (0x3F) - Question mark
             \\ (0x5C) - Backslash
             
             \xhh      - Print in the output the character/code given in the 
                         hexadecimal value (hh).
             
 Examples:
           PRINT("Hello World");
            
           char aString[]="ARE YOU SURE?\nYes, No\a";
           PRINT(aString);



================================================================================
4.8 PrintNumber

 Function: 
           void PrintNumber(unsigned int value)
 Description: 
           Prints an unsigned integer on the screen.  
 Input:    (unsigned int) numeric value          
 Output:   -
 Examples:
 
           PrintNumber(17334);



================================================================================
4.9 PrintFNumber

 Function: 
           void PrintFNumber(unsigned int value, char emptyChar, char length)
 Description: 
           Prints an unsigned integer on the screen with formatting parameters.
 Input:    (unsigned int) numeric value
           (char) empty Char: (32=' ', 48='0', etc.)
           (char) length: 1 to 5          
 Output:   -
 Examples:
 
           PrintFNumber(2400,' ',5);
           
            2400
           
            
           char charValue=71;
           PrintFNumber(charValue,'0',3);
           
           071

           
           PrintFNumber(502,48,4);
           
           0502
           
           
           
           
--------------------------------------------------------------------------------
5 Support functions

   The next functions are required for the operation of the main functions but 
   they can be used to create new features.
   
   

================================================================================
5.1 bchput

 Function: 
           void bchput(char value)
 Description: 
           Displays one character (MSX BIOS CHPUT).
 Input:   (char) text char
 Output:  -
 Examples:
  
           bchput(13); //CR (Carriage Return)
           
           
--------------------------------------------------------------------------------
